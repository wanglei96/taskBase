{"name": "test_add[字符串和正整数]", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str", "trace": "self = <class_2_2_task.test_case.test_calculator.TestCalculator object at 0x000001EDBF9B7788>, a = ' ', b = 5, expect = '请输入数字'\nget_clac = <class_2_2_task.python_code.Calculator.Calculator object at 0x000001EDBF7F7608>, logger = <RootLogger root (INFO)>\n\n    @allure.story(\"测试加法\")\n    @pytest.mark.parametrize('a, b, expect', add_data, ids=add_ids)\n    def test_add(self, a, b, expect, get_clac, logger):\n        # 计算结果，保留2位小数\n>       actual = round(get_clac.add(a, b), 2)\n\ntest_calculator.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <class_2_2_task.python_code.Calculator.Calculator object at 0x000001EDBF7F7608>, a = ' ', b = 5\n\n    def add(self, a, b):\n>       return a + b\nE       TypeError: can only concatenate str (not \"int\") to str\n\n..\\python_code\\Calculator.py:15: TypeError"}, "parameters": [{"name": "a", "value": "' '"}, {"name": "b", "value": "5"}, {"name": "expect", "value": "'请输入数字'"}], "start": 1624787598090, "stop": 1624787598090, "uuid": "48f28e92-a835-40cd-b197-3fb43df98b44", "historyId": "56ca1258f862ed409f30e244b4c5b9d9", "testCaseId": "c0380ad0f93ea623c2328a25b0918ec2", "fullName": "test_calculator.TestCalculator#test_add", "labels": [{"name": "story", "value": "测试加法"}, {"name": "feature", "value": "计算器测试"}, {"name": "suite", "value": "test_calculator"}, {"name": "subSuite", "value": "TestCalculator"}, {"name": "host", "value": "LAPTOP-L0LUTPCQ"}, {"name": "thread", "value": "18684-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calculator"}]}